{"version":3,"sources":["/Users/mc/Projects/pm2-web-admin/pages/index.js"],"names":["HomePage","props","handleProcesses","processes","console","log","setState","toggle","bind","state","isOpen","socket","io","path","on","off","close","map","thisProcess","pid","monit","cpu","name","pm2_env","pm_cwd","defaultProps"],"mappings":"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","file":"3.caae15d71e1908acaa70.hot-update.js","sourcesContent":["import { Component } from 'react'\nimport io from 'socket.io-client'\nimport fetch from 'isomorphic-fetch'\n\nimport {\n  Badge,\n  Card, \n  CardImg, \n  CardText, \n  CardBody,\n  CardTitle, \n  CardSubtitle, \n  Button,  \n  ButtonGroup,\n  Container,\n  Row,\n  Col,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nimport \"../assets/sass/styles.scss\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      isOpen: false,\n      processes: [],\n    }\n  \n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  // fetch old messages data from the server\n  // static async getInitialProps({ req }) {\n  //   const response = await fetch('http://localhost:3000/pm2')\n  //   const processes = await response.json()\n  //   return { processes }\n  // }\n\n  static defaultProps = {\n    processes: [],\n  }\n\n  // init state with the prefetched processes\n\n  // connect to WS server and listen event\n  componentDidMount() {\n    this.socket = io('http://localhost:9000/', {path: '/foo/bar'})\n    this.socket.on('pm2', this.handleProcesses)\n\n\n  }\n\n  // close socket connection\n  componentWillUnmount() {\n    this.socket.off('pm2', this.handleProcesses)\n    this.socket.close()\n  }\n\n  // add processes from server to the state\n  handleProcesses = (processes) => {\n    console.log(processes)\n    this.setState({\n      processes\n    })\n  }\n\n  render() {\n\n    return (\n      <Container fluid>\n        <Navbar color=\"faded\" light expand=\"md\">\n          <NavbarBrand href=\"/\">PM2 Web Admin</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"https://github.com/yahoohung/pm2-web-admin\">Github</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>      \n        <Row>\n          {this.state.processes.map(thisProcess=>     \n          <Col>\n            <Card key={thisProcess.pid}>\n              <CardBody className=\"d-flex align-items-center\">\n                <div>\n                  <Button color=\"primary\" outline>\n                    CPU <Badge color=\"secondary\">{thisProcess.monit.cpu}%</Badge>\n                  </Button>                  \n                  <Button color=\"primary\" outline>\n                    CPU <Badge color=\"secondary\">{thisProcess.monit.cpu}%</Badge>\n                  </Button>                 \n                </div>\n                <div>\n                  <CardTitle>{thisProcess.name}</CardTitle>\n                  <CardSubtitle>{thisProcess.pm2_env.pm_cwd}</CardSubtitle>\n                  <CardText></CardText>\n                </div>\n                <div className=\"ml-auto\">\n                  <ButtonGroup>\n                    <Button color=\"danger\">Stop</Button>\n                    <Button color=\"warning\">Reload</Button>\n                    <Button color=\"info\">Restart</Button>\n                  </ButtonGroup>                  \n                </div>\n              </CardBody>\n            </Card>                     \n          </Col>\n          )}            \n        </Row>\n      </Container>      \n    )\n  }\n}\n\nexport default HomePage\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}